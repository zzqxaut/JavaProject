<?xml version="1.0" encoding="UTF-8" ?>


<!--          核心配置文件        -->

<!--xml约束，规定当前配置文件能使用哪些标签-->
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">


<!--根标签-->
<configuration>
    <!--
        MyBatis核心配置文件中，标签必须按指定顺序：
        properties?,settings?,typeAliases?,typeHandlers?,
        objectFactory?,objectWrapperFactory?,reflectorFactory?,
        plugins?,environments?,databaseIdProvider?,mappers?
    -->
    
    <!--引入properties文件,用于配置dataSourse中的property，此后可以通过在当前文件中使用${key}的方式访问value-->
    <properties resource="jdbc.properties"/>
    
    <!--为某个具体类设置简短别名，在mybatis范围中，可通过其访问原类（复数）-->
    <typeAliases>
        <!--
            typeAlias：设置某个类型的别名
            属性：
            type：设置需要设置别名的类型
            alias：设置的别名，若不设置该属性，那么该类型拥有默认的别名，即类名，且不区分大小写
        -->
        <typeAlias type="com.test.mybatis.pojo.User" alias="User"></typeAlias>
        <!--所有实体类放在同一个包下，以包为单位，设置包下所有的类型拥有默认的别名，即类名且不区分大小写-->
        <package name="com.test.mybatis.pojo"/>
    </typeAliases>

    <!--
        environments：配置多个连接数据库的环境，可在其中配置多个environment
        属性：default设置默认使用的环境的id，一个项目中同时只能使用一个环境
    -->
    <environments default="development">
        <!--
            environment：配置某个具体的环境
            属性：id表示连接数据库的环境的唯一标识，不能重复
        -->
        <environment id="development">
            <!--
                transactionManager：设置事务管理器
                属性：type="JDBC|MANAGED"设置事务管理方式
                JDBC：表示当前环境中，执行SQL时，使用的是JDBC中原生的事务管理方式，事
                务的提交或回滚需要手动处理
                MANAGED：被管理，例如Spring
            -->
            <transactionManager type="JDBC"/>
            <!--
                dataSource：配置数据源，管理数据库连接
                属性：type="POOLED|UNPOOLED|JNDI"设置数据源的类型
                POOLED：表示使用数据库连接池缓存数据库连接,下次使用连接时无需重新创建
                UNPOOLED：表示不使用数据库连接池，每次重新创建连接
                JNDI：表示使用上下文中的数据源
            -->
            <dataSource type="POOLED">
<!--                这四个参数不可或缺，设置用于连接数据库的数据-->
<!--                可将其放入propert文件中，便于维护-->
                <property name="driver" value="${jdbc.driver}"></property><!--驱动类-->
                <property name="url" value="${jdbc.url}"></property><!--url地址-->
                <property name="username" value="${jdbc.username}"></property><!--用户名-->
                <property name="password" value="${jdbc.password}"></property><!--密码-->
<!--                <property name="driver" value="com.mysql.cj.jdbc.Driver"></property>-->
<!--                <property name="url" value="jdbc:mysql://localhost:3306/database?serverTimezone=UTC"></property>-->
<!--                <property name="username" value="root"></property>-->
<!--                <property name="password" value="111111"></property>-->
            </dataSource>
        </environment>

        <environment id="test">
            <transactionManager type="JDBC"></transactionManager>
            <dataSource type="POOLED">
                <property name="driver" value="com.mysql.cj.jdbc.Driver"></property><!--驱动类-->
                <property name="url" value="jdbc:mysql://localhost:3306/database?serverTimezone=UTC"></property><!--url地址-->
                <property name="username" value="root"></property><!--用户名-->
                <property name="password" value="111111"></property><!--密码-->
            </dataSource>
        </environment>
    </environments>

<!--    引入mabatis映射文件-->
    <mappers>
        <!--引入单个映射文件，resourse为映射文件路径-->
<!--        <mapper resource="mappers/UserMapper.xml"></mapper>-->
        <!--
            以包为单位引入映射文件,类似以包为单位设置别名
            1、mapper接口所在的包要和映射文件所在的包一致,注意是全类名
            2、mapper接口要和映射文件的名字一致
        -->
        <package name="com.test.mybatis.mapper"/>
    </mappers>
</configuration>